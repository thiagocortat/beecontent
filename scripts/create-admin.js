const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function createAdmin() {
  try {
    const email = process.argv[2]
    const password = process.argv[3]
    const hotelName = process.argv[4] || 'Hotel Administra√ß√£o'

    if (!email || !password) {
      console.log('Uso: node scripts/create-admin.js <email> <senha> [nome-do-hotel]')
      console.log('Exemplo: node scripts/create-admin.js admin@hotel.com minhasenha123 "Meu Hotel"')
      process.exit(1)
    }

    // Verificar se o usu√°rio j√° existe
    const existingUser = await prisma.user.findUnique({
      where: { email }
    })

    if (existingUser) {
      console.log(`‚ö†Ô∏è  Usu√°rio com email ${email} j√° existe. Atualizando...`)
      // Deletar usu√°rio existente
      await prisma.user.delete({
        where: { email }
      })
    }

    // Hash da senha
    const hashedPassword = await bcrypt.hash(password, 12)

    // Criar hotel padr√£o se n√£o existir
    let hotel = await prisma.hotel.findFirst({
      where: {
        name: hotelName
      }
    })

    if (!hotel) {
      hotel = await prisma.hotel.create({
        data: {
          chainId: 'ADMIN_CHAIN',
          name: hotelName,
          address: 'Endere√ßo n√£o informado',
          neighborhood: 'Centro',
          city: 'Cidade',
          state: 'Estado',
          country: 'Brasil'
        }
      })
      console.log(`üè® Hotel "${hotel.name}" criado com ID: ${hotel.id}`)
    } else {
      console.log(`üè® Usando hotel existente: "${hotel.name}" (ID: ${hotel.id})`)
    }

    // Criar usu√°rio administrador
    const admin = await prisma.user.create({
      data: {
        email,
        password: hashedPassword,
        role: 'ADMIN',
        hotelId: hotel.id
      }
    })

    console.log('‚úÖ Usu√°rio administrador criado com sucesso!')
    console.log(`üìß Email: ${admin.email}`)
    console.log(`üë§ Role: ${admin.role}`)
    console.log(`üè® Hotel: ${hotel.name}`)
    console.log(`üÜî ID: ${admin.id}`)
    console.log('')
    console.log('Agora voc√™ pode fazer login no sistema com essas credenciais.')
    
  } catch (error) {
    console.error('‚ùå Erro ao criar usu√°rio administrador:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createAdmin()